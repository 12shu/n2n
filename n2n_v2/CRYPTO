crypto protocol v0.0.1

Key negotiation
===============

Diffie-Hellman secured with long term key
see key mgmt recommendations
Pub L = 15360, Priv N = 512


Session key derivation
======================

Maybe DH should derive 2 different keys for the nonce problem:
http://tools.ietf.org/html/rfc5246 (TLS 1.2) Section 5
	P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed)
	A(0) = seed
	A(i) = HMAC_hash(secret, A(i-1))
derived_key = hmac_sha256(key, hmac_sha256(key, seed) + seed)

to consider: choice of seed


IV choice
=========

GCM in IPsec ESP (RFC 4106):
4B salt: unpredictable but constant for SA lifetime
8B IV:   LFSR or counter [garantee uniqueness]

GCM in SSH (RFC 5647) [note: not implemented in openssh 5.8]:
4B fixed
8B invocation counter


Packet format
=============

We choose the encrypting and authenticating AES GCM mode for performance
security. gcm 256 is not implemented in gnutls, so we use 128 bit.

to consider:
- which fields to authenticate with GCM, but not encrypt (e.g. MAC addr)
- pad authentication data / plain text to block size?
  [according to nettle spec this is not needed, we might do it anyway on the
   plain text to make statistical analysis more difficult]

planned payload AES GCM 256 bit:
?B crypto protocol version [authenticated]
12B IV
---enc---
    ?B  plaintext
	?B  padding (counting up from 1)
	1B  padding length 0-255
-enc end-
16B ICV

old packet format:
common:
	1B  version
	1B  ttl
	2B  flags
	+   pc (packet type)
	16B community
packet:
 A  6B  src mac
 A  6B  dst mac
	if FLAGS_SOCKET:
		2B  socket flags
		2B  dest UDP port
		4B [16B IP6] dest IP4 addr
	if FLAGS_LOCAL_SOCKET:
		2B  socket flags
		2B  dest UDP port
		4B [16B IP6] dest IP4 addr
 A  2B transform ID
	+  payload


Security Analysis
=================

TODO

The security is based on a shared secret key, which requires that all
communicating parties trust each other.

Not protecting against:
- replay [TODO: consequences?; replay protection like dtls?]
- active MITM with key


References
==========

NSA Suite B
http://www.nsa.gov/ia/programs/suiteb_cryptography/

NIST Key management recommendations
http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf p. 63

The Order of Encryption and Authentication for Protecting Communications
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.106.5488&rep=rep1&type=pdf
(authenticate then encrypt vs encrypt then authenticate discussion)

GCM spec/proposal, http://www.cryptobarn.com/gcm/
http://www.cryptobarn.com/papers/gcm-spec.pdf

NIST GCM spec
http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf

Cryptolounge GCM
http://www.cryptolounge.org/wiki/GCM

The Use of Galois/Counter Mode (GCM) in IPsec Encapsulating Security Payload (ESP)
http://tools.ietf.org/html/rfc4106

The Use of Galois Message Authentication Code (GMAC) in IPsec ESP and AH
http://tools.ietf.org/html/rfc4543

Suite B Cryptographic Suites for IPsec
http://tools.ietf.org/html/rfc4869

An Interface and Algorithms for Authenticated Encryption
http://tools.ietf.org/html/rfc5116

The Transport Layer Security (TLS) Protocol Version 1.2
http://tools.ietf.org/html/rfc5246   Section 6.2.3.2

AES Galois Counter Mode for the Secure Shell Transport Layer Protocol
http://tools.ietf.org/html/rfc5647
